// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load, sel=address, a=register1, b=register2,c=register3,d=register4,e=register5,f=register6,g=register7,h=register8);
    Register(in=in,load=register1, out=ro1);
    Register(in=in,load=register2, out=ro2);
    Register(in=in,load=register3, out=ro3);
    Register(in=in,load=register4, out=ro4);
    Register(in=in,load=register5, out=ro5);
    Register(in=in,load=register6, out=ro6);
    Register(in=in,load=register7, out=ro7);
    Register(in=in,load=register8, out=ro8);
    Mux8Way16(a=ro1,b=ro2,c=ro3,d=ro4,e=ro5,f=ro6,g=ro7,h=ro8, sel=address, out=out);
}